from aiogram import Router, types
from aiogram.filters import Command
from loguru import logger
from db.database import Database
from db.models import User

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message, db_session: Database):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    session = next(db_session.get_db())

    try:
        user = session.query(User).filter_by(telegram_id=user_id).first()

        if not user:
            new_user = User(
                telegram_id=user_id,
                username=username,
                first_name=first_name,
                last_name=last_name
            )
            session.add(new_user)
            session.commit()
            session.refresh(new_user)
            logger.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {new_user.telegram_id}")
            await message.answer(
                f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã\n"
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NekoWatch ‚Äî —Ç–≤–æ–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –ø–æ –∞–Ω–∏–º–µ! "
                "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —Å–ø–∏—Å–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∏–º–µ."
            )
        else:
            logger.info(f"–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è: {user.telegram_id}")
            await message.answer(
                f"–°–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã\n"
                "–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å –≤ NekoWatch! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
            )
    except Exception as e:
        session.rollback()
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start –¥–ª—è {user_id}: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º!")
    finally:
        session.close()

@router.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø NekoWatch, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∞–Ω–∏–º–µ. "
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —Å–ø–∏—Å–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∏–º–µ.\n\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "üìú */list* –∏–ª–∏ */mylist* - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–∏ —Å–ø–∏—Å–∫–∏ –∞–Ω–∏–º–µ. –¢—ã –º–æ–∂–µ—à—å —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–ë—É–¥—É —Å–º–æ—Ç—Ä–µ—Ç—å, –°–º–æ—Ç—Ä—é —Å–µ–π—á–∞—Å, –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ, –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å).\n"
        "‚ûï */add* - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∞–Ω–∏–º–µ –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫. –Ø —Å–ø—Ä–æ—à—É –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—Ç–∞—Ç—É—Å –∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, —Ç–µ–∫—É—â—É—é —Å–µ—Ä–∏—é/–≤—Ä–µ–º—è.\n"
        "üí° */help* - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é.\n\n"
        "–í –±—É–¥—É—â–µ–º —Ç—ã —Ç–∞–∫–∂–µ —Å–º–æ–∂–µ—à—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏, –ø–æ–ª—É—á–∞—Ç—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –∞–Ω–∏–º–µ –∏ –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ø–æ–¥–±–æ—Ä–∫–∞–º–∏!"
    )
    await message.answer(help_text, parse_mode="Markdown")
